####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the docker image run:
#
# mvn package
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/geoip-client-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/geoip-client-jvm
#
###
FROM debian:stable-slim AS maxmind-builder

RUN apt-get update && \
  apt-get install -y --no-install-recommends \
  ca-certificates \
  curl \
  unzip

COPY bin/maxmind.sh /workdir/
RUN /workdir/maxmind.sh /tmp/maxmind

FROM fabric8/java-alpine-openjdk8-jre

WORKDIR /deployments/scripts

COPY --from=maxmind-builder /tmp/maxmind /maxmind

ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 \
-Djava.util.logging.manager=org.jboss.logmanager.LogManager \
-Xmx256m \
-Dquarkus.http.root-path=/geopip \
-Declipse.subnet.ipv4.path=/maxmind/db/GeoLite2-Country-Blocks-IPv4.csv \
-Declipse.subnet.ipv6.path=/maxmind/db/GeoLite2-Country-Blocks-IPv6.csv \
-Declipse.subnet.countries.path=/maxmind/db/GeoLite2-Country-Locations-en.csv \
-Dmaxmind.database.root=/maxmind/bin \
-Dmaxmind.database.country.file=GeoLite2-Country.mmdb \
-Dmaxmind.database.city.file=GeoLite2-City.mmdb"
ENV AB_ENABLED=jmx_exporter
COPY target/lib/* /deployments/lib/
COPY target/*-runner.jar /deployments/app.jar
EXPOSE 8080

# run with user 1001 and be prepared for be running in OpenShift too
RUN adduser -G root --no-create-home --disabled-password 1001 \
  && chown -R 1001 /deployments \
  && chmod -R "g+rwX" /deployments \
  && chown -R 1001:root /deployments
USER 1001

ENTRYPOINT [ "/deployments/run-java.sh" ]
